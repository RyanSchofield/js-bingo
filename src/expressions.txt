[,,,].length
true + false
[1, 2, 3] + [4, 5, 6]
0.2 + 0.1 === 0.3
10,2
!!""
+!![]
parseInt(0.0000005)
true == "true"
010 - 03
"" - - ""
null + 0
0/0
1/0 > 10 ** 1000
true++
"" - 1
(null - 0) + "0"
true + ("true" - 0)
!5 + !5
[] + []
1 + 2 + "3"
typeof NaN
undefined + false
"" && -0
+!!NaN * "" - - [,]
[,,,] + [,,,]
1 + 1
2 + 2
1 + "1"
undefined >= 0 || undefined < 0
(function(){ return typeof arguments; })()
typeof null
typeof undefined
typeof []
(function f(f){ return typeof f(); })(function(){ return 1; })
1/0
typeof (1/0)
(function f(){ function f(){ return 1; } return f(); function f(){ return 2; } })()
1 == true
[1] == true
[] == true
[1,2] == true
1 === true
1 == "1"
1 === "1"
[] == ![]
true == [] || true == ![]
false == [] && false == ![]
"b" + "a" + +"a" + "a"
true == "1"
!!"false" == !!"true"
NaN === NaN
["hello", "world"].join(" ")
Object.is(-0, 0)
![] + []
[] + {}
null == false
[0] == 0
[0] == ''
[''] == 0
[] == 0
[[[[[[ null ]]]]]] == 0
Number()
Number(undefined)
parseInt(0.0000001)
3 > 2 > 1
'3' - 1
[4] * [4]
[] * []
[4, 4] * [4, 4]
"str" instanceof String
[...[..."..."]].length
(() => { try { return 2; } finally { return 3; } })()
(() => {})()
NaN != NaN
Math.min() > Math.max()
Math.min()
null >= 0
null == 0
[10, 1, 3].sort()
{}{}
{foo: 'bar'}{}
{}{foo: 'bar'}
27..toString()
"".split("")
"".split(" ")
[[1, 2], [3, 4], [5]].flat()
[...[1,2,3], ...[4,5,6]]
0 * Infinity
null * true
true * 0x10
[...new Set([1, 2, 2, 3, 3, 3])]
[1, 2, 3, 4, 5].filter(x => x % 2)
[1, 2, 3].reduce((acc, val) => acc + val, 0)
[10, 1, 3].toSorted((a,b) => a - b)
[1, 2, 3, 4].pop()
10**1000
(() => 'foo')`bar`
.2 + .2 == .4
2 ** 3
3 | 5
3 & 5
[1, 2, 3].map(x => 2*x)
[1, 2, 3].toReversed()
[1, 3, 4].toSpliced(1, 0, 2)
typeof typeof {}
1_000_000
(x => x + 1)(99)
(function fact(n) { return n == 1 ? 1 : n * fact(n - 1) })(4)
(f => f (f)) (f => x => x === 0 ? 1 : x * (f => f (f)) (f) (x - 1)) (4)  
typeof "foo"
10**100
0b111
0b101
0b11
typeof 1n


